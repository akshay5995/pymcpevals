# Simple trajectory-based evaluation example
# Tests multi-turn conversations

model:
  provider: gemini
  name: gemini-2.5-flash

server:
  command: ["python", "calculator_server.py"]

evaluations:
  # Simple two-step calculation
  - name: simple_math_sequence
    description: Test basic multi-step math
    turns:
      - role: user
        content: "What is 10 + 5?"
        expected_tools: ["add"]
      - role: user
        content: "Now multiply that result by 2"
        expected_tools: ["multiply"]
    expected_result: "Should calculate (10+5)*2 = 30"
    threshold: 4.0

  # Error handling sequence
  - name: error_then_success
    description: Test error recovery
    turns:
      - role: user
        content: "Divide 10 by 0"
        expected_tools: ["divide"]
      - role: user
        content: "OK, divide 10 by 2 instead"
        expected_tools: ["divide"]
    expected_result: "Should handle error then succeed with 5"
    threshold: 3.5

timeout: 30.0
parallel: false